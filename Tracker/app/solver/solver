
#ifndef APP_PATHSOLVER_HPP_
#define APP_PATHSOLVER_HPP_

#include <traccore>
#include "../ray"
#include "../scene/scene"

/*
template <int N>
struct Factorial
{
	enum { value = N * Factorial<N - 1>::value };
};

template <>
struct Factorial<0>
{
	enum { value = 1 };
};

// Factorial<4>::value == 24
// Factorial<0>::value == 1
void foo()
{
	int x = Factorial<4>::value; // == 24
	int y = Factorial<0>::value; // == 1
}
*/

namespace solver
{
	typedef Color (*solver)( const Scene& scene , const Ray& ray );
	
	Color blank( const Scene& scene , const Ray& ray );
	Color legacy( const Scene& scene , const Ray& ray );
	Color reflection( const Scene& scene , const Ray& ray );
	Color dev( const Scene& scene , const Ray& ray );
}

#endif // APP_SOLVER_HPP_
